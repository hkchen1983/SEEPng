// Applying and configuring application
apply plugin: 'application'
mainClassName = 'uk.ac.imperial.lsds.seepcontrib.yarn.Main'
applicationDefaultJvmArgs = []

// Variables internal to this build script
ext{
	yarnVersion="2.6.0"
}

configurations {
	// Remove transitive dependencies from Zookeeper that we don't want.
	compile.exclude group: 'javax.jms', module: 'jms'
	compile.exclude group: 'com.sun.jdmk', module: 'jmxtools'
	compile.exclude group: 'com.sun.jmx', module: 'jmxri'
}

dependencies {
	compile project(':seep-common')
	compile "org.apache.kafka:kafka_2.10:0.8.2-beta"
	compile "org.apache.kafka:kafka-clients:0.8.2-beta"
	compile compile("org.apache.hadoop:hadoop-yarn-api:$yarnVersion") {
		exclude module: 'slf4j-log4j12'
	}
	compile compile("org.apache.hadoop:hadoop-yarn-common:$yarnVersion") {
		exclude module: 'slf4j-log4j12'
		exclude module: 'servlet-api'
	}
	compile compile("org.apache.hadoop:hadoop-yarn-client:$yarnVersion") {
		exclude module: 'slf4j-log4j12'
		exclude module: 'servlet-api'
	}
	compile compile("org.apache.hadoop:hadoop-common:$yarnVersion") {
		exclude module: 'slf4j-log4j12'
		exclude module: 'servlet-api'
	}


	testCompile "org.apache.kafka:kafka_2.10:0.8.2-beta:test"
}

task fatJar(type: Jar){
	description "Builds and creates one Fat Jar that includes all \
	dependencies"
    	from {
      		configurations.compile.collect {
        	it.isDirectory() ? it : zipTree(it)
      	}
    }
  	{
    	exclude 'META-INF/*.RSA'
    	exclude 'META-INF/*.SF'
    	exclude 'META-INF/*.DSA'
  	} 
  	with jar
  	manifest {
    	attributes 'Main-Class': mainClassName
  	}
}

// Configure the output of the installApp task of the application plugin
installApp.destinationDir = file("$projectDir.parent/install/$project.name")
